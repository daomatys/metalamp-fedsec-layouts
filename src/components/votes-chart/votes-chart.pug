mixin votesChart( items=[] )
  - const strokeWidth = 4
  - const figureOuterRadius = 60
  - const figureInnerRadius = figureOuterRadius - strokeWidth
  - const strokeLength = 2 * Math.PI.toFixed(2) * figureInnerRadius
  - const strokeGap = 2

  - let votesTotal = 0
  - let strokeOffset = -strokeGap / 2

  .votes-chart
    .votes-chart__diagram
      svg.votes-chart__diagram-elem( width="120" height="120" viewBox="0 0 120 120" preserveAspectRatio="none" )
        defs
          each item in items
            - votesTotal += item.votes
            linearGradient( id=`${ item.name }-gradient` x1="1" y1="0" x2="0" y2="0" )
              stop( class=`gradient__${ item.name }_start` offset="0%" )
              stop( class=`gradient__${ item.name }_end`   offset="100%" )

        each item in items
          - const votesPercentage = item.votes / votesTotal
          - const strokeFilled = item.votes !== 0 ? strokeLength * votesPercentage : strokeGap
          circle.votes-chart__diagram-elem_unit(
            r=figureInnerRadius
            cx="50%"
            cy="50%"
            stroke=`url(#${ item.name }-gradient)`
            stroke-width=strokeWidth
            stroke-dasharray=`${strokeFilled - strokeGap} ${strokeLength}`
            stroke-dashoffset=strokeOffset
          )
          - strokeOffset -= strokeFilled

      .votes-chart__diagram-text 
        span.votes-chart__diagram-text_votes.custom-font-style_h1 #{ votesTotal }
        span.votes-chart__diagram-text_word.custom-font-style_h3 голос#{ defineWordEnding( votesTotal ) }

    .votes-chart__legend
      - const sortedItems = sortArray( items )
      each item in sortedItems
        .votes-chart__legend-item
          .votes-chart__legend-item_marker( class=`marker_${ item.name }` )
          .votes-chart__legend-item_text.custom-font-style_body #{ item.legend }

-
  function defineWordEnding( num ) {
    let result = ''

    if ( Math.floor(num/10)===1 || num%10<1 || num%10>4 ) {
      result = 'ов';
    } else {
      if ( num%10>1 ) {
        result = 'a';
      }
    }
    return result;
  }

  function sortArray( arr ) {
    arr.reverse().push( arr.shift() );
    return arr;
  }
